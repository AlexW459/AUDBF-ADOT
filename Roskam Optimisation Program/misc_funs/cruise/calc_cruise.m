

function calc_cruise(plane) %MAYBE GET RID OF LOOP

    plane.turning_properties.coeff_lift = 0.75*plane.wing.coeff_lift_max;

    plane.turning_properties.speed2 = sqrt(2*plane.misc_properties.load_factor*...
                                   plane.mass2*plane.physics.gravity/...
                                   (plane.physics.air_density30*plane.wing.area*...
                                   plane.turning_properties.coeff_lift));   

    plane.turning_properties.speed3 = sqrt(2*plane.misc_properties.load_factor*...
                                   plane.mass3*plane.physics.gravity/...
                                   (plane.physics.air_density30*plane.wing.area*...
                                   plane.turning_properties.coeff_lift));  

    

    [plane.cruise_properties.coeff_lift2,...
            plane.cruise_properties.coeff_lift3] = ...
            C_LAtCruise(plane.cruise_properties.speed2,...
            plane.cruise_properties.speed3,plane); 
    %Maybe change any reference to speed2 and speed3 --> change to the
    %maximum speed. [ coeff drag needs to be a function] .

    % plus

    %Add in seperate smaller segments.

    %Make sure thrust is 10% during deceleration and whatever is required
    %during thrust.

    [plane.cruise_properties.coeff_drag2,...
         plane.cruise_properties.coeff_drag3] = C_D_AtCruise(...
         plane.cruise_properties.coeff_lift2,...
         plane.cruise_properties.coeff_lift3, plane);

    [plane.misc_properties.oswald_efficiency2,...
         plane.misc_properties.oswald_efficiency3] =...
         oswald_efficiency(plane.cruise_properties.coeff_lift2,...
         plane.cruise_properties.coeff_lift3, plane);


    P_CR = powerAtCruise(...
        [plane.cruise_properties.speed2,...
        plane.cruise_properties.speed3], plane);

    plane.cruise_properties.power2 = P_CR(1);
    plane.cruise_properties.power3 = P_CR(2);


    %This is the old formula for time for a lap:
    %-------------------------------------------------------------------
    % plane.cruise_properties.time2  =...
    % plane.course.length/plane.cruise_properties.speed2 + ...
    %     4*pi*plane.turning_properties.speed2/plane.physics.gravity/...
    %     sqrt(plane.misc_properties.load_factor^2-1);


    %This is the new formula for time for a lap:
    %-------------------------------------------------------------------

    plane.cruise_properties.time_straight2 = 4/plane.cruise_properties.acceleration2*...
                                            (plane.turning_properties.speed2+...
                                             sqrt(0.5*plane.course.length*... %Half here since the straight is half the "course length"
                                             plane.cruise_properties.acceleration2+...
                                             plane.turning_properties.speed2^2));


    %Add in the W1 --> loop --> W2. 
    plane.cruise_properties.time2  =...
    plane.cruise_properties.time_straight2 + ...
        4*pi*plane.turning_properties.speed2/plane.physics.gravity/...
        sqrt(plane.misc_properties.load_factor^2-1);


    %Now for mission 3:
    plane.cruise_properties.time_straight3 = 4/plane.cruise_properties.acceleration3*...
                                            (plane.turning_properties.speed3+...
                                             sqrt(0.5*plane.course.length*... %Half here since the straight is half the "course length"
                                             plane.cruise_properties.acceleration3+...
                                             plane.turning_properties.speed3^2));
    plane.cruise_properties.time3  =...
    plane.cruise_properties.time_straight3 + ...
        4*pi*plane.turning_properties.speed3/plane.physics.gravity/...
        sqrt(plane.misc_properties.load_factor^2-1);

   
end

